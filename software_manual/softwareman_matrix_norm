
**Routine Name:** MatrixNorm

**Author:** Spencer Wheeler

**Language:** Python

**Description/Purpose:** This routine is made to find different types of matrix norms. 
There are two different methods in this file, Nor1(), and infNorm(). 
Nor1() outputs the 1 norm of a matrix. 
infNorm outputs the infinite norm of a matrix. 

**Input:**
Both of these methods only need input of a single matrix. 

**Usage/Example:** 
At the bottom of the file there is a example usage of these methods. If the file is ran by itself, it will run this
example code. 

Example usage:

    import Matrices.PracticeMatrix
    print(Norm1([[1, 2],
          [1, -2],
          [1, 5]]))

    print(infNorm([[1, 2],
                 [1, -2],
                 [1, 5]]))

    matrix = Matrices.PracticeMatrix.diagonallyDom(100)

    print(Norm1(matrix))
    print(infNorm(matrix))

Example's output

    9
    6
    176
    177


**Code:**



    def Norm1(matrix):
        max = None
        for cols in range(len(matrix[0])):
            colTotal = 0
            for rows in range(len(matrix)):
                colTotal += abs(matrix[rows][cols])
            if max is None:
                max = colTotal
            else:
                if max < colTotal:
                    max = colTotal
        return max
    
    
    def infNorm(matrix):
        max = None
        for row in matrix:
            total = 0
            for item in row:
                total += abs(item)
            if max is None:
                max = total
            if total > max:
                max = total
    
        return max
    
    
    if __name__ == "__main__":
        import Matrices.PracticeMatrix
        print(Norm1([[1, 2],
              [1, -2],
              [1, 5]]))
    
        print(infNorm([[1, 2],
                     [1, -2],
                     [1, 5]]))
    
        matrix = Matrices.PracticeMatrix.diagonallyDom(100)
    
        print(Norm1(matrix))
        print(infNorm(matrix))


